[2019-11-02 00:00:06,403] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 00:00:06,407] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), responseTopic-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 00:00:06,407] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 00:00:06,407] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 00:05:06,420] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 00:05:06,422] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), responseTopic-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 00:05:06,422] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 00:05:06,422] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 00:10:06,435] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 00:10:06,437] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), responseTopic-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 00:10:06,437] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 00:10:06,437] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 00:10:12,301] INFO [Controller id=0] New topics: [Set(getConfirmedOrderOwner)], deleted topics: [Set()], new partition replica assignment [Map(getConfirmedOrderOwner-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-11-02 00:10:12,302] INFO [Controller id=0] New partition creation callback for getConfirmedOrderOwner-0 (kafka.controller.KafkaController)
[2019-11-02 00:10:12,314] INFO [RequestSendThread controllerId=0] Controller 0 connected to 10.0.0.63:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-11-02 00:10:21,655] INFO [Controller id=0] New topics: [Set(getPreparingOrderOwner)], deleted topics: [Set()], new partition replica assignment [Map(getPreparingOrderOwner-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-11-02 00:10:21,655] INFO [Controller id=0] New partition creation callback for getPreparingOrderOwner-0 (kafka.controller.KafkaController)
[2019-11-02 00:10:31,120] INFO [Controller id=0] New topics: [Set(getReadyOrderOwner)], deleted topics: [Set()], new partition replica assignment [Map(getReadyOrderOwner-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-11-02 00:10:31,120] INFO [Controller id=0] New partition creation callback for getReadyOrderOwner-0 (kafka.controller.KafkaController)
[2019-11-02 00:10:39,454] INFO [Controller id=0] New topics: [Set(getCancelledOrderOwner)], deleted topics: [Set()], new partition replica assignment [Map(getCancelledOrderOwner-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-11-02 00:10:39,454] INFO [Controller id=0] New partition creation callback for getCancelledOrderOwner-0 (kafka.controller.KafkaController)
[2019-11-02 00:10:47,434] INFO [Controller id=0] New topics: [Set(getPastOrderUser)], deleted topics: [Set()], new partition replica assignment [Map(getPastOrderUser-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-11-02 00:10:47,434] INFO [Controller id=0] New partition creation callback for getPastOrderUser-0 (kafka.controller.KafkaController)
[2019-11-02 00:10:55,280] INFO [Controller id=0] New topics: [Set(getUpcomingOrderUser)], deleted topics: [Set()], new partition replica assignment [Map(getUpcomingOrderUser-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-11-02 00:10:55,280] INFO [Controller id=0] New partition creation callback for getUpcomingOrderUser-0 (kafka.controller.KafkaController)
[2019-11-02 00:11:03,557] INFO [Controller id=0] New topics: [Set(getPastOrderOwner)], deleted topics: [Set()], new partition replica assignment [Map(getPastOrderOwner-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-11-02 00:11:03,557] INFO [Controller id=0] New partition creation callback for getPastOrderOwner-0 (kafka.controller.KafkaController)
[2019-11-02 00:15:06,450] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 00:15:06,451] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), responseTopic-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 00:15:06,451] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 00:15:06,451] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 00:20:06,465] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 00:20:06,467] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), responseTopic-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 00:20:06,467] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 00:20:06,467] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 00:25:06,482] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 00:25:06,484] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), responseTopic-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 00:25:06,484] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 00:25:06,485] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 00:30:06,500] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 00:30:06,501] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), responseTopic-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 00:30:06,502] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 00:30:06,502] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 00:35:06,515] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 00:35:06,517] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), responseTopic-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 00:35:06,517] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 00:35:06,517] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 00:39:34,684] INFO [Controller id=0] New topics: [Set(postCancelOrder)], deleted topics: [Set()], new partition replica assignment [Map(postCancelOrder-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-11-02 00:39:34,685] INFO [Controller id=0] New partition creation callback for postCancelOrder-0 (kafka.controller.KafkaController)
[2019-11-02 00:39:34,698] INFO [RequestSendThread controllerId=0] Controller 0 connected to 10.0.0.63:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-11-02 00:40:00,530] INFO [Controller id=0] New topics: [Set(postChangeOrderStatus)], deleted topics: [Set()], new partition replica assignment [Map(postChangeOrderStatus-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-11-02 00:40:00,530] INFO [Controller id=0] New partition creation callback for postChangeOrderStatus-0 (kafka.controller.KafkaController)
[2019-11-02 00:40:06,529] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 00:40:06,529] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), postChangeOrderStatus-0 -> Vector(0), postCancelOrder-0 -> Vector(0), responseTopic-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 00:40:06,530] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 00:40:06,530] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 00:45:06,540] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 00:45:06,542] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), postChangeOrderStatus-0 -> Vector(0), postCancelOrder-0 -> Vector(0), responseTopic-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 00:45:06,542] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 00:45:06,542] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 00:50:06,555] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 00:50:06,557] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), postChangeOrderStatus-0 -> Vector(0), postCancelOrder-0 -> Vector(0), responseTopic-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 00:50:06,557] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 00:50:06,557] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 00:55:06,571] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 00:55:06,573] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), postChangeOrderStatus-0 -> Vector(0), postCancelOrder-0 -> Vector(0), responseTopic-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 00:55:06,573] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 00:55:06,573] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)

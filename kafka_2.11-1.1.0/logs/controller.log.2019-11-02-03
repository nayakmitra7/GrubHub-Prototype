[2019-11-02 03:02:24,070] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 03:02:24,073] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), postChangeOrderStatus-0 -> Vector(0), postCancelOrder-0 -> Vector(0), postPlaceOrder-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), responseTopic-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 03:02:24,073] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 03:02:24,073] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 03:07:24,087] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 03:07:24,087] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), postChangeOrderStatus-0 -> Vector(0), postCancelOrder-0 -> Vector(0), postPlaceOrder-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), responseTopic-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 03:07:24,087] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 03:07:24,087] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 03:12:24,104] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 03:12:24,106] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), postChangeOrderStatus-0 -> Vector(0), postCancelOrder-0 -> Vector(0), postPlaceOrder-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), responseTopic-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 03:12:24,106] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 03:12:24,106] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 03:17:24,126] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 03:17:24,127] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), postChangeOrderStatus-0 -> Vector(0), postCancelOrder-0 -> Vector(0), postPlaceOrder-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), responseTopic-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 03:17:24,128] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 03:17:24,128] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 03:22:24,145] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 03:22:24,145] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), postChangeOrderStatus-0 -> Vector(0), postCancelOrder-0 -> Vector(0), postPlaceOrder-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), responseTopic-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 03:22:24,145] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 03:22:24,145] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 03:27:24,164] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 03:27:24,164] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), postChangeOrderStatus-0 -> Vector(0), postCancelOrder-0 -> Vector(0), postPlaceOrder-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), responseTopic-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 03:27:24,164] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 03:27:24,164] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 03:32:24,181] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 03:32:24,181] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), postChangeOrderStatus-0 -> Vector(0), postCancelOrder-0 -> Vector(0), postPlaceOrder-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), responseTopic-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 03:32:24,181] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 03:32:24,181] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 03:37:24,191] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 03:37:24,193] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), postChangeOrderStatus-0 -> Vector(0), postCancelOrder-0 -> Vector(0), postPlaceOrder-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), responseTopic-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 03:37:24,193] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 03:37:24,193] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 03:42:24,204] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 03:42:24,204] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), postChangeOrderStatus-0 -> Vector(0), postCancelOrder-0 -> Vector(0), postPlaceOrder-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), responseTopic-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 03:42:24,204] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 03:42:24,204] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 03:47:24,218] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 03:47:24,218] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), postChangeOrderStatus-0 -> Vector(0), postCancelOrder-0 -> Vector(0), postPlaceOrder-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), responseTopic-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 03:47:24,218] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 03:47:24,218] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 03:52:24,238] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 03:52:24,239] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), postChangeOrderStatus-0 -> Vector(0), postCancelOrder-0 -> Vector(0), postPlaceOrder-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), responseTopic-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 03:52:24,239] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 03:52:24,239] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 03:57:24,249] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 03:57:24,249] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), postChangeOrderStatus-0 -> Vector(0), postCancelOrder-0 -> Vector(0), postPlaceOrder-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), responseTopic-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 03:57:24,250] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 03:57:24,250] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)

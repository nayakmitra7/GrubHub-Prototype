[2019-11-02 16:38:59,127] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2019-11-02 16:38:59,129] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2019-11-02 16:38:59,133] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2019-11-02 16:38:59,136] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2019-11-02 16:38:59,137] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2019-11-02 16:38:59,137] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2019-11-02 16:38:59,137] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2019-11-02 16:38:59,142] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2019-11-02 16:38:59,154] INFO [Controller id=0] 0 successfully elected as the controller (kafka.controller.KafkaController)
[2019-11-02 16:38:59,154] INFO [Controller id=0] Reading controller epoch from ZooKeeper (kafka.controller.KafkaController)
[2019-11-02 16:38:59,157] INFO [Controller id=0] Initialized controller epoch to 1 and zk version 0 (kafka.controller.KafkaController)
[2019-11-02 16:38:59,157] INFO [Controller id=0] Incrementing controller epoch in ZooKeeper (kafka.controller.KafkaController)
[2019-11-02 16:38:59,159] INFO [Controller id=0] Epoch incremented to 2 (kafka.controller.KafkaController)
[2019-11-02 16:38:59,159] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2019-11-02 16:38:59,162] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2019-11-02 16:38:59,163] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2019-11-02 16:38:59,164] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2019-11-02 16:38:59,210] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2019-11-02 16:38:59,218] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2019-11-02 16:38:59,224] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2019-11-02 16:38:59,224] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2019-11-02 16:38:59,225] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2019-11-02 16:38:59,225] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2019-11-02 16:38:59,225] INFO [Controller id=0] Current list of topics in the cluster: Set(postChangeOrderStatus, postPlaceOrder, postCancelOrder, getPastOrderOwner, getPreparingOrderOwner, getPastOrderUser, getNewOrderOwner, responseTopics, getReadyOrderOwner, responseTopic, getCancelledOrderOwner, getUpcomingOrderUser, getConfirmedOrderOwner) (kafka.controller.KafkaController)
[2019-11-02 16:38:59,225] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2019-11-02 16:38:59,226] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2019-11-02 16:38:59,227] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2019-11-02 16:38:59,227] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2019-11-02 16:38:59,227] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2019-11-02 16:38:59,230] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ReplicaStateMachine)
[2019-11-02 16:38:59,230] INFO [RequestSendThread controllerId=0] Controller 0 connected to 10.0.0.63:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-11-02 16:38:59,231] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ReplicaStateMachine)
[2019-11-02 16:38:59,236] INFO [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=getPastOrderOwner,Partition=0,Replica=0] -> OnlineReplica, [Topic=postCancelOrder,Partition=0,Replica=0] -> OnlineReplica, [Topic=getReadyOrderOwner,Partition=0,Replica=0] -> OnlineReplica, [Topic=responseTopics,Partition=0,Replica=0] -> OnlineReplica, [Topic=getPreparingOrderOwner,Partition=0,Replica=0] -> OnlineReplica, [Topic=getNewOrderOwner,Partition=0,Replica=0] -> OnlineReplica, [Topic=responseTopic,Partition=0,Replica=0] -> OnlineReplica, [Topic=postPlaceOrder,Partition=0,Replica=0] -> OnlineReplica, [Topic=getConfirmedOrderOwner,Partition=0,Replica=0] -> OnlineReplica, [Topic=getPastOrderUser,Partition=0,Replica=0] -> OnlineReplica, [Topic=getUpcomingOrderUser,Partition=0,Replica=0] -> OnlineReplica, [Topic=getCancelledOrderOwner,Partition=0,Replica=0] -> OnlineReplica, [Topic=postChangeOrderStatus,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2019-11-02 16:38:59,236] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.PartitionStateMachine)
[2019-11-02 16:38:59,237] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.PartitionStateMachine)
[2019-11-02 16:38:59,237] INFO [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(responseTopics-0 -> OnlinePartition, getCancelledOrderOwner-0 -> OnlinePartition, postChangeOrderStatus-0 -> OnlinePartition, getPreparingOrderOwner-0 -> OnlinePartition, postPlaceOrder-0 -> OnlinePartition, postCancelOrder-0 -> OnlinePartition, responseTopic-0 -> OnlinePartition, getUpcomingOrderUser-0 -> OnlinePartition, getPastOrderUser-0 -> OnlinePartition, getReadyOrderOwner-0 -> OnlinePartition, getNewOrderOwner-0 -> OnlinePartition, getConfirmedOrderOwner-0 -> OnlinePartition, getPastOrderOwner-0 -> OnlinePartition) (kafka.controller.PartitionStateMachine)
[2019-11-02 16:38:59,237] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2019-11-02 16:38:59,238] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2019-11-02 16:38:59,238] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2019-11-02 16:38:59,238] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2019-11-02 16:38:59,238] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2019-11-02 16:38:59,238] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-11-02 16:38:59,241] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2019-11-02 16:39:04,245] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 16:39:04,246] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), postChangeOrderStatus-0 -> Vector(0), postCancelOrder-0 -> Vector(0), postPlaceOrder-0 -> Vector(0), responseTopic-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 16:39:04,246] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 16:39:04,246] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 16:44:04,262] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 16:44:04,264] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), postChangeOrderStatus-0 -> Vector(0), postCancelOrder-0 -> Vector(0), postPlaceOrder-0 -> Vector(0), responseTopic-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 16:44:04,264] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 16:44:04,264] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 16:49:04,276] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 16:49:04,278] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), postChangeOrderStatus-0 -> Vector(0), postCancelOrder-0 -> Vector(0), postPlaceOrder-0 -> Vector(0), responseTopic-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 16:49:04,278] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 16:49:04,279] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 16:54:04,294] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 16:54:04,296] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), postChangeOrderStatus-0 -> Vector(0), postCancelOrder-0 -> Vector(0), postPlaceOrder-0 -> Vector(0), responseTopic-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 16:54:04,296] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 16:54:04,296] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 16:59:04,312] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 16:59:04,314] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), postChangeOrderStatus-0 -> Vector(0), postCancelOrder-0 -> Vector(0), postPlaceOrder-0 -> Vector(0), responseTopic-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 16:59:04,314] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 16:59:04,314] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)

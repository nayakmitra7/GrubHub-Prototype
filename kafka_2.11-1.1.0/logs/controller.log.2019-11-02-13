[2019-11-02 13:22:41,023] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:41,226] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:41,331] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:41,435] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:41,536] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:41,607] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2019-11-02 13:22:41,608] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2019-11-02 13:22:41,608] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2019-11-02 13:22:41,608] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2019-11-02 13:22:41,608] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2019-11-02 13:22:41,609] WARN [RequestSendThread controllerId=0] Controller 0 epoch 34 fails to send request (type: UpdateMetadataRequest=, controllerId=0, controllerEpoch=34, partitionStates={responseTopic-0=PartitionState(controllerEpoch=28, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[]), postCancelOrder-0=PartitionState(controllerEpoch=30, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[]), responseTopics-0=PartitionState(controllerEpoch=28, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[]), getNewOrderOwner-0=PartitionState(controllerEpoch=28, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[]), getPastOrderUser-0=PartitionState(controllerEpoch=30, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[]), getUpcomingOrderUser-0=PartitionState(controllerEpoch=30, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[]), getConfirmedOrderOwner-0=PartitionState(controllerEpoch=30, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[]), getPreparingOrderOwner-0=PartitionState(controllerEpoch=30, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[]), getReadyOrderOwner-0=PartitionState(controllerEpoch=30, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[]), postPlaceOrder-0=PartitionState(controllerEpoch=30, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[]), getCancelledOrderOwner-0=PartitionState(controllerEpoch=30, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[]), getPastOrderOwner-0=PartitionState(controllerEpoch=30, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[]), postChangeOrderStatus-0=PartitionState(controllerEpoch=30, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[]), getNewOrdersOwners-0=PartitionState(controllerEpoch=28, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[])}, liveBrokers=(id=0, endPoints=(host=10.0.0.63, port=9092, listenerName=ListenerName(PLAINTEXT), securityProtocol=PLAINTEXT), rack=null)) to broker 10.0.0.63:9092 (id: 0 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1039)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1328)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:277)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:69)
	at kafka.controller.RequestSendThread.backoff$1(ControllerChannelManager.scala:215)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:227)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:41,609] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2019-11-02 13:22:41,609] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2019-11-02 13:22:41,610] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2019-11-02 13:22:41,617] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2019-11-02 13:22:41,712] INFO [Controller id=0] 0 successfully elected as the controller (kafka.controller.KafkaController)
[2019-11-02 13:22:41,712] INFO [Controller id=0] Reading controller epoch from ZooKeeper (kafka.controller.KafkaController)
[2019-11-02 13:22:41,713] INFO [Controller id=0] Initialized controller epoch to 34 and zk version 33 (kafka.controller.KafkaController)
[2019-11-02 13:22:41,713] INFO [Controller id=0] Incrementing controller epoch in ZooKeeper (kafka.controller.KafkaController)
[2019-11-02 13:22:41,716] INFO [Controller id=0] Epoch incremented to 35 (kafka.controller.KafkaController)
[2019-11-02 13:22:41,716] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2019-11-02 13:22:41,718] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2019-11-02 13:22:41,719] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2019-11-02 13:22:41,719] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2019-11-02 13:22:41,724] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2019-11-02 13:22:41,729] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2019-11-02 13:22:41,734] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2019-11-02 13:22:41,734] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2019-11-02 13:22:41,734] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2019-11-02 13:22:41,734] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2019-11-02 13:22:41,734] INFO [Controller id=0] Current list of topics in the cluster: Set(postChangeOrderStatus, postPlaceOrder, postCancelOrder, getPastOrderOwner, getPreparingOrderOwner, getPastOrderUser, getNewOrderOwner, responseTopics, getReadyOrderOwner, responseTopic, getCancelledOrderOwner, getUpcomingOrderUser, getConfirmedOrderOwner, getNewOrdersOwners) (kafka.controller.KafkaController)
[2019-11-02 13:22:41,734] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2019-11-02 13:22:41,735] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2019-11-02 13:22:41,735] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2019-11-02 13:22:41,735] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2019-11-02 13:22:41,735] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2019-11-02 13:22:41,737] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ReplicaStateMachine)
[2019-11-02 13:22:41,737] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:41,738] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ReplicaStateMachine)
[2019-11-02 13:22:41,741] INFO [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=getPastOrderOwner,Partition=0,Replica=0] -> OnlineReplica, [Topic=postCancelOrder,Partition=0,Replica=0] -> OnlineReplica, [Topic=getReadyOrderOwner,Partition=0,Replica=0] -> OnlineReplica, [Topic=getNewOrdersOwners,Partition=0,Replica=0] -> OnlineReplica, [Topic=responseTopics,Partition=0,Replica=0] -> OnlineReplica, [Topic=getPreparingOrderOwner,Partition=0,Replica=0] -> OnlineReplica, [Topic=getNewOrderOwner,Partition=0,Replica=0] -> OnlineReplica, [Topic=responseTopic,Partition=0,Replica=0] -> OnlineReplica, [Topic=postPlaceOrder,Partition=0,Replica=0] -> OnlineReplica, [Topic=getConfirmedOrderOwner,Partition=0,Replica=0] -> OnlineReplica, [Topic=getPastOrderUser,Partition=0,Replica=0] -> OnlineReplica, [Topic=getUpcomingOrderUser,Partition=0,Replica=0] -> OnlineReplica, [Topic=getCancelledOrderOwner,Partition=0,Replica=0] -> OnlineReplica, [Topic=postChangeOrderStatus,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2019-11-02 13:22:41,741] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.PartitionStateMachine)
[2019-11-02 13:22:41,741] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.PartitionStateMachine)
[2019-11-02 13:22:41,742] INFO [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(responseTopics-0 -> OnlinePartition, getCancelledOrderOwner-0 -> OnlinePartition, postChangeOrderStatus-0 -> OnlinePartition, getPreparingOrderOwner-0 -> OnlinePartition, postPlaceOrder-0 -> OnlinePartition, postCancelOrder-0 -> OnlinePartition, responseTopic-0 -> OnlinePartition, getNewOrdersOwners-0 -> OnlinePartition, getUpcomingOrderUser-0 -> OnlinePartition, getPastOrderUser-0 -> OnlinePartition, getReadyOrderOwner-0 -> OnlinePartition, getNewOrderOwner-0 -> OnlinePartition, getConfirmedOrderOwner-0 -> OnlinePartition, getPastOrderOwner-0 -> OnlinePartition) (kafka.controller.PartitionStateMachine)
[2019-11-02 13:22:41,742] INFO [Controller id=0] Ready to serve as the new controller with epoch 35 (kafka.controller.KafkaController)
[2019-11-02 13:22:41,742] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2019-11-02 13:22:41,742] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2019-11-02 13:22:41,742] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2019-11-02 13:22:41,742] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2019-11-02 13:22:41,742] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-11-02 13:22:41,744] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2019-11-02 13:22:41,844] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:41,947] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:42,052] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:42,153] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:42,258] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:42,359] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:42,463] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:42,567] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:42,670] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:42,775] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:42,876] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:42,980] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:43,083] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:43,189] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:43,293] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:43,399] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:43,502] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:43,607] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:43,711] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:43,812] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:43,916] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:44,018] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:44,123] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:44,226] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:44,327] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:44,428] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:44,530] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:44,630] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 10.0.0.63:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.0.63:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:271)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:225)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2019-11-02 13:22:44,732] INFO [RequestSendThread controllerId=0] Controller 0 connected to 10.0.0.63:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-11-02 13:22:46,746] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 13:22:46,746] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), postChangeOrderStatus-0 -> Vector(0), postCancelOrder-0 -> Vector(0), postPlaceOrder-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), responseTopic-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 13:22:46,747] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 13:22:46,747] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 13:27:46,760] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 13:27:46,761] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), postChangeOrderStatus-0 -> Vector(0), postCancelOrder-0 -> Vector(0), postPlaceOrder-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), responseTopic-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 13:27:46,762] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 13:27:46,762] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 13:28:39,535] DEBUG [Controller id=0] Delete topics listener fired for topics postPlaceOrder to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:28:39,536] INFO [Controller id=0] Starting topic deletion for topics postPlaceOrder (kafka.controller.KafkaController)
[2019-11-02 13:28:39,536] INFO [Topic Deletion Manager 0], Handling deletion for topics postPlaceOrder (kafka.controller.TopicDeletionManager)
[2019-11-02 13:28:39,537] INFO [Topic Deletion Manager 0], Deletion of topic postPlaceOrder (re)started (kafka.controller.TopicDeletionManager)
[2019-11-02 13:28:39,537] INFO [Topic Deletion Manager 0], Topic deletion callback for postPlaceOrder (kafka.controller.TopicDeletionManager)
[2019-11-02 13:28:39,541] INFO [Topic Deletion Manager 0], Partition deletion callback for postPlaceOrder-0 (kafka.controller.TopicDeletionManager)
[2019-11-02 13:28:39,550] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:28:39,550] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=postPlaceOrder,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:28:39,550] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=postPlaceOrder,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:28:39,550] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=postPlaceOrder,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:28:39,550] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:28:39,574] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@12bc5bea (kafka.controller.KafkaController)
[2019-11-02 13:28:39,575] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=postPlaceOrder,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:28:39,575] INFO [Topic Deletion Manager 0], Handling deletion for topics postPlaceOrder (kafka.controller.TopicDeletionManager)
[2019-11-02 13:28:39,588] INFO [Topic Deletion Manager 0], Deletion of topic postPlaceOrder successfully completed (kafka.controller.TopicDeletionManager)
[2019-11-02 13:28:39,589] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-11-02 13:28:39,590] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:32:46,777] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 13:32:46,779] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(responseTopics-0 -> Vector(0), getCancelledOrderOwner-0 -> Vector(0), getPreparingOrderOwner-0 -> Vector(0), postChangeOrderStatus-0 -> Vector(0), postCancelOrder-0 -> Vector(0), getNewOrdersOwners-0 -> Vector(0), responseTopic-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0), getPastOrderUser-0 -> Vector(0), getReadyOrderOwner-0 -> Vector(0), getNewOrderOwner-0 -> Vector(0), getConfirmedOrderOwner-0 -> Vector(0), getPastOrderOwner-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 13:32:46,779] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 13:32:46,779] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 13:33:07,789] DEBUG [Controller id=0] Delete topics listener fired for topics getNewOrderOwner to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:33:07,790] INFO [Controller id=0] Starting topic deletion for topics getNewOrderOwner (kafka.controller.KafkaController)
[2019-11-02 13:33:07,790] INFO [Topic Deletion Manager 0], Handling deletion for topics getNewOrderOwner (kafka.controller.TopicDeletionManager)
[2019-11-02 13:33:07,790] INFO [Topic Deletion Manager 0], Deletion of topic getNewOrderOwner (re)started (kafka.controller.TopicDeletionManager)
[2019-11-02 13:33:07,790] INFO [Topic Deletion Manager 0], Topic deletion callback for getNewOrderOwner (kafka.controller.TopicDeletionManager)
[2019-11-02 13:33:07,792] INFO [Topic Deletion Manager 0], Partition deletion callback for getNewOrderOwner-0 (kafka.controller.TopicDeletionManager)
[2019-11-02 13:33:07,794] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:33:07,794] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getNewOrderOwner,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:33:07,794] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getNewOrderOwner,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:33:07,795] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getNewOrderOwner,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:33:07,795] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:33:07,818] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@47251f9 (kafka.controller.KafkaController)
[2019-11-02 13:33:07,818] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getNewOrderOwner,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:33:07,818] INFO [Topic Deletion Manager 0], Handling deletion for topics getNewOrderOwner (kafka.controller.TopicDeletionManager)
[2019-11-02 13:33:07,831] INFO [Topic Deletion Manager 0], Deletion of topic getNewOrderOwner successfully completed (kafka.controller.TopicDeletionManager)
[2019-11-02 13:33:07,832] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-11-02 13:33:07,833] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:33:27,499] DEBUG [Controller id=0] Delete topics listener fired for topics getCancelledOrderOwner to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:33:27,500] INFO [Controller id=0] Starting topic deletion for topics getCancelledOrderOwner (kafka.controller.KafkaController)
[2019-11-02 13:33:27,500] INFO [Topic Deletion Manager 0], Handling deletion for topics getCancelledOrderOwner (kafka.controller.TopicDeletionManager)
[2019-11-02 13:33:27,500] INFO [Topic Deletion Manager 0], Deletion of topic getCancelledOrderOwner (re)started (kafka.controller.TopicDeletionManager)
[2019-11-02 13:33:27,500] INFO [Topic Deletion Manager 0], Topic deletion callback for getCancelledOrderOwner (kafka.controller.TopicDeletionManager)
[2019-11-02 13:33:27,502] INFO [Topic Deletion Manager 0], Partition deletion callback for getCancelledOrderOwner-0 (kafka.controller.TopicDeletionManager)
[2019-11-02 13:33:27,505] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:33:27,505] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getCancelledOrderOwner,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:33:27,505] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getCancelledOrderOwner,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:33:27,505] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getCancelledOrderOwner,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:33:27,505] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:33:27,522] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@64c464e1 (kafka.controller.KafkaController)
[2019-11-02 13:33:27,523] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getCancelledOrderOwner,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:33:27,523] INFO [Topic Deletion Manager 0], Handling deletion for topics getCancelledOrderOwner (kafka.controller.TopicDeletionManager)
[2019-11-02 13:33:27,535] INFO [Topic Deletion Manager 0], Deletion of topic getCancelledOrderOwner successfully completed (kafka.controller.TopicDeletionManager)
[2019-11-02 13:33:27,536] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-11-02 13:33:27,536] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:34:00,242] DEBUG [Controller id=0] Delete topics listener fired for topics getConfirmedOrderOwner to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:34:00,243] INFO [Controller id=0] Starting topic deletion for topics getConfirmedOrderOwner (kafka.controller.KafkaController)
[2019-11-02 13:34:00,244] INFO [Topic Deletion Manager 0], Handling deletion for topics getConfirmedOrderOwner (kafka.controller.TopicDeletionManager)
[2019-11-02 13:34:00,244] INFO [Topic Deletion Manager 0], Deletion of topic getConfirmedOrderOwner (re)started (kafka.controller.TopicDeletionManager)
[2019-11-02 13:34:00,244] INFO [Topic Deletion Manager 0], Topic deletion callback for getConfirmedOrderOwner (kafka.controller.TopicDeletionManager)
[2019-11-02 13:34:00,245] INFO [Topic Deletion Manager 0], Partition deletion callback for getConfirmedOrderOwner-0 (kafka.controller.TopicDeletionManager)
[2019-11-02 13:34:00,249] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:34:00,249] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getConfirmedOrderOwner,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:34:00,250] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getConfirmedOrderOwner,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:34:00,250] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getConfirmedOrderOwner,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:34:00,250] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:34:00,273] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@1ce24b4d (kafka.controller.KafkaController)
[2019-11-02 13:34:00,273] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getConfirmedOrderOwner,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:34:00,274] INFO [Topic Deletion Manager 0], Handling deletion for topics getConfirmedOrderOwner (kafka.controller.TopicDeletionManager)
[2019-11-02 13:34:00,289] INFO [Topic Deletion Manager 0], Deletion of topic getConfirmedOrderOwner successfully completed (kafka.controller.TopicDeletionManager)
[2019-11-02 13:34:00,290] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-11-02 13:34:00,290] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:35:01,209] DEBUG [Controller id=0] Delete topics listener fired for topics getNewOrdersOwners to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:35:01,210] INFO [Controller id=0] Starting topic deletion for topics getNewOrdersOwners (kafka.controller.KafkaController)
[2019-11-02 13:35:01,210] INFO [Topic Deletion Manager 0], Handling deletion for topics getNewOrdersOwners (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:01,210] INFO [Topic Deletion Manager 0], Deletion of topic getNewOrdersOwners (re)started (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:01,210] INFO [Topic Deletion Manager 0], Topic deletion callback for getNewOrdersOwners (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:01,211] INFO [Topic Deletion Manager 0], Partition deletion callback for getNewOrdersOwners-0 (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:01,218] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:35:01,218] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getNewOrdersOwners,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:35:01,218] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getNewOrdersOwners,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:01,219] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getNewOrdersOwners,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:35:01,219] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:35:01,238] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@6cf12030 (kafka.controller.KafkaController)
[2019-11-02 13:35:01,238] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getNewOrdersOwners,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:01,238] INFO [Topic Deletion Manager 0], Handling deletion for topics getNewOrdersOwners (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:01,252] INFO [Topic Deletion Manager 0], Deletion of topic getNewOrdersOwners successfully completed (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:01,253] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-11-02 13:35:01,253] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:35:12,601] DEBUG [Controller id=0] Delete topics listener fired for topics getPastOrderOwner to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:35:12,602] INFO [Controller id=0] Starting topic deletion for topics getPastOrderOwner (kafka.controller.KafkaController)
[2019-11-02 13:35:12,602] INFO [Topic Deletion Manager 0], Handling deletion for topics getPastOrderOwner (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:12,603] INFO [Topic Deletion Manager 0], Deletion of topic getPastOrderOwner (re)started (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:12,603] INFO [Topic Deletion Manager 0], Topic deletion callback for getPastOrderOwner (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:12,604] INFO [Topic Deletion Manager 0], Partition deletion callback for getPastOrderOwner-0 (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:12,612] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:35:12,612] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getPastOrderOwner,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:35:12,612] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getPastOrderOwner,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:12,612] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getPastOrderOwner,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:35:12,612] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:35:12,628] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@7a1a49ce (kafka.controller.KafkaController)
[2019-11-02 13:35:12,628] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getPastOrderOwner,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:12,629] INFO [Topic Deletion Manager 0], Handling deletion for topics getPastOrderOwner (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:12,641] INFO [Topic Deletion Manager 0], Deletion of topic getPastOrderOwner successfully completed (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:12,642] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-11-02 13:35:12,643] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:35:31,494] DEBUG [Controller id=0] Delete topics listener fired for topics getReadyOrderOwner to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:35:31,494] INFO [Controller id=0] Starting topic deletion for topics getReadyOrderOwner (kafka.controller.KafkaController)
[2019-11-02 13:35:31,494] INFO [Topic Deletion Manager 0], Handling deletion for topics getReadyOrderOwner (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:31,495] INFO [Topic Deletion Manager 0], Deletion of topic getReadyOrderOwner (re)started (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:31,495] INFO [Topic Deletion Manager 0], Topic deletion callback for getReadyOrderOwner (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:31,495] INFO [Topic Deletion Manager 0], Partition deletion callback for getReadyOrderOwner-0 (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:31,499] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:35:31,499] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getReadyOrderOwner,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:35:31,500] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getReadyOrderOwner,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:31,500] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getReadyOrderOwner,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:35:31,500] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:35:31,524] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@3dbec900 (kafka.controller.KafkaController)
[2019-11-02 13:35:31,524] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getReadyOrderOwner,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:31,524] INFO [Topic Deletion Manager 0], Handling deletion for topics getReadyOrderOwner (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:31,540] INFO [Topic Deletion Manager 0], Deletion of topic getReadyOrderOwner successfully completed (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:31,541] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-11-02 13:35:31,544] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:35:50,290] DEBUG [Controller id=0] Delete topics listener fired for topics responseTopic to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:35:50,290] INFO [Controller id=0] Starting topic deletion for topics responseTopic (kafka.controller.KafkaController)
[2019-11-02 13:35:50,290] INFO [Topic Deletion Manager 0], Handling deletion for topics responseTopic (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:50,291] INFO [Topic Deletion Manager 0], Deletion of topic responseTopic (re)started (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:50,291] INFO [Topic Deletion Manager 0], Topic deletion callback for responseTopic (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:50,292] INFO [Topic Deletion Manager 0], Partition deletion callback for responseTopic-0 (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:50,296] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:35:50,296] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=responseTopic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:35:50,296] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=responseTopic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:50,296] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=responseTopic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:35:50,296] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:35:50,313] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@330855d9 (kafka.controller.KafkaController)
[2019-11-02 13:35:50,313] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=responseTopic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:50,313] INFO [Topic Deletion Manager 0], Handling deletion for topics responseTopic (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:50,325] INFO [Topic Deletion Manager 0], Deletion of topic responseTopic successfully completed (kafka.controller.TopicDeletionManager)
[2019-11-02 13:35:50,326] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-11-02 13:35:50,326] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:36:05,986] DEBUG [Controller id=0] Delete topics listener fired for topics responseTopics to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:36:05,988] INFO [Controller id=0] Starting topic deletion for topics responseTopics (kafka.controller.KafkaController)
[2019-11-02 13:36:05,988] INFO [Topic Deletion Manager 0], Handling deletion for topics responseTopics (kafka.controller.TopicDeletionManager)
[2019-11-02 13:36:05,988] INFO [Topic Deletion Manager 0], Deletion of topic responseTopics (re)started (kafka.controller.TopicDeletionManager)
[2019-11-02 13:36:05,988] INFO [Topic Deletion Manager 0], Topic deletion callback for responseTopics (kafka.controller.TopicDeletionManager)
[2019-11-02 13:36:05,990] INFO [Topic Deletion Manager 0], Partition deletion callback for responseTopics-0 (kafka.controller.TopicDeletionManager)
[2019-11-02 13:36:05,993] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:36:05,993] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=responseTopics,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:36:05,993] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=responseTopics,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:36:05,994] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=responseTopics,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:36:05,994] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:36:06,011] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@561d0328 (kafka.controller.KafkaController)
[2019-11-02 13:36:06,011] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=responseTopics,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:36:06,011] INFO [Topic Deletion Manager 0], Handling deletion for topics responseTopics (kafka.controller.TopicDeletionManager)
[2019-11-02 13:36:06,022] INFO [Topic Deletion Manager 0], Deletion of topic responseTopics successfully completed (kafka.controller.TopicDeletionManager)
[2019-11-02 13:36:06,023] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-11-02 13:36:06,024] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:37:33,968] DEBUG [Controller id=0] Delete topics listener fired for topics getPastOrderUser to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:37:33,969] INFO [Controller id=0] Starting topic deletion for topics getPastOrderUser (kafka.controller.KafkaController)
[2019-11-02 13:37:33,969] INFO [Topic Deletion Manager 0], Handling deletion for topics getPastOrderUser (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:33,969] INFO [Topic Deletion Manager 0], Deletion of topic getPastOrderUser (re)started (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:33,969] INFO [Topic Deletion Manager 0], Topic deletion callback for getPastOrderUser (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:33,971] INFO [Topic Deletion Manager 0], Partition deletion callback for getPastOrderUser-0 (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:33,975] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:37:33,975] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getPastOrderUser,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:37:33,975] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getPastOrderUser,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:33,976] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getPastOrderUser,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:37:33,976] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:37:33,992] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@7ee1741c (kafka.controller.KafkaController)
[2019-11-02 13:37:33,993] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getPastOrderUser,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:33,993] INFO [Topic Deletion Manager 0], Handling deletion for topics getPastOrderUser (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:34,005] INFO [Topic Deletion Manager 0], Deletion of topic getPastOrderUser successfully completed (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:34,006] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-11-02 13:37:34,007] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:37:42,963] DEBUG [Controller id=0] Delete topics listener fired for topics getPreparingOrderOwner to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:37:42,963] INFO [Controller id=0] Starting topic deletion for topics getPreparingOrderOwner (kafka.controller.KafkaController)
[2019-11-02 13:37:42,964] INFO [Topic Deletion Manager 0], Handling deletion for topics getPreparingOrderOwner (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:42,964] INFO [Topic Deletion Manager 0], Deletion of topic getPreparingOrderOwner (re)started (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:42,964] INFO [Topic Deletion Manager 0], Topic deletion callback for getPreparingOrderOwner (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:42,965] INFO [Topic Deletion Manager 0], Partition deletion callback for getPreparingOrderOwner-0 (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:42,968] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:37:42,968] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getPreparingOrderOwner,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:37:42,969] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getPreparingOrderOwner,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:42,969] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getPreparingOrderOwner,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:37:42,969] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:37:42,984] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@35dc4409 (kafka.controller.KafkaController)
[2019-11-02 13:37:42,984] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getPreparingOrderOwner,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:42,984] INFO [Topic Deletion Manager 0], Handling deletion for topics getPreparingOrderOwner (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:42,998] INFO [Topic Deletion Manager 0], Deletion of topic getPreparingOrderOwner successfully completed (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:42,999] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-11-02 13:37:42,999] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:37:46,793] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 13:37:46,793] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(postChangeOrderStatus-0 -> Vector(0), postCancelOrder-0 -> Vector(0), getUpcomingOrderUser-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-11-02 13:37:46,793] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-11-02 13:37:46,793] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-11-02 13:37:50,317] DEBUG [Controller id=0] Delete topics listener fired for topics getUpcomingOrderUser to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:37:50,317] INFO [Controller id=0] Starting topic deletion for topics getUpcomingOrderUser (kafka.controller.KafkaController)
[2019-11-02 13:37:50,317] INFO [Topic Deletion Manager 0], Handling deletion for topics getUpcomingOrderUser (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:50,317] INFO [Topic Deletion Manager 0], Deletion of topic getUpcomingOrderUser (re)started (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:50,317] INFO [Topic Deletion Manager 0], Topic deletion callback for getUpcomingOrderUser (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:50,317] INFO [Topic Deletion Manager 0], Partition deletion callback for getUpcomingOrderUser-0 (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:50,323] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:37:50,323] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=getUpcomingOrderUser,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:37:50,323] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=getUpcomingOrderUser,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:50,323] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=getUpcomingOrderUser,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:37:50,323] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:37:50,336] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@440b69f6 (kafka.controller.KafkaController)
[2019-11-02 13:37:50,336] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=getUpcomingOrderUser,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:50,336] INFO [Topic Deletion Manager 0], Handling deletion for topics getUpcomingOrderUser (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:50,347] INFO [Topic Deletion Manager 0], Deletion of topic getUpcomingOrderUser successfully completed (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:50,348] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-11-02 13:37:50,348] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:37:57,479] DEBUG [Controller id=0] Delete topics listener fired for topics postCancelOrder to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:37:57,480] INFO [Controller id=0] Starting topic deletion for topics postCancelOrder (kafka.controller.KafkaController)
[2019-11-02 13:37:57,480] INFO [Topic Deletion Manager 0], Handling deletion for topics postCancelOrder (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:57,481] INFO [Topic Deletion Manager 0], Deletion of topic postCancelOrder (re)started (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:57,481] INFO [Topic Deletion Manager 0], Topic deletion callback for postCancelOrder (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:57,482] INFO [Topic Deletion Manager 0], Partition deletion callback for postCancelOrder-0 (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:57,485] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:37:57,485] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=postCancelOrder,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:37:57,485] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=postCancelOrder,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:57,485] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=postCancelOrder,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:37:57,485] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:37:57,501] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@7a31361c (kafka.controller.KafkaController)
[2019-11-02 13:37:57,501] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=postCancelOrder,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:57,501] INFO [Topic Deletion Manager 0], Handling deletion for topics postCancelOrder (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:57,514] INFO [Topic Deletion Manager 0], Deletion of topic postCancelOrder successfully completed (kafka.controller.TopicDeletionManager)
[2019-11-02 13:37:57,514] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-11-02 13:37:57,515] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:38:04,637] DEBUG [Controller id=0] Delete topics listener fired for topics postChangeOrderStatus to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:38:04,638] INFO [Controller id=0] Starting topic deletion for topics postChangeOrderStatus (kafka.controller.KafkaController)
[2019-11-02 13:38:04,638] INFO [Topic Deletion Manager 0], Handling deletion for topics postChangeOrderStatus (kafka.controller.TopicDeletionManager)
[2019-11-02 13:38:04,638] INFO [Topic Deletion Manager 0], Deletion of topic postChangeOrderStatus (re)started (kafka.controller.TopicDeletionManager)
[2019-11-02 13:38:04,638] INFO [Topic Deletion Manager 0], Topic deletion callback for postChangeOrderStatus (kafka.controller.TopicDeletionManager)
[2019-11-02 13:38:04,640] INFO [Topic Deletion Manager 0], Partition deletion callback for postChangeOrderStatus-0 (kafka.controller.TopicDeletionManager)
[2019-11-02 13:38:04,643] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:38:04,643] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=postChangeOrderStatus,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:38:04,643] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=postChangeOrderStatus,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:38:04,644] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=postChangeOrderStatus,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:38:04,644] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2019-11-02 13:38:04,654] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@f05fcd2 (kafka.controller.KafkaController)
[2019-11-02 13:38:04,654] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=postChangeOrderStatus,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2019-11-02 13:38:04,655] INFO [Topic Deletion Manager 0], Handling deletion for topics postChangeOrderStatus (kafka.controller.TopicDeletionManager)
[2019-11-02 13:38:04,666] INFO [Topic Deletion Manager 0], Deletion of topic postChangeOrderStatus successfully completed (kafka.controller.TopicDeletionManager)
[2019-11-02 13:38:04,667] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2019-11-02 13:38:04,667] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2019-11-02 13:41:41,785] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2019-11-02 13:42:46,808] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 13:42:46,808] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2019-11-02 13:42:56,981] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2019-11-02 13:44:05,726] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2019-11-02 13:47:46,822] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 13:47:46,822] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2019-11-02 13:50:03,179] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2019-11-02 13:51:18,366] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2019-11-02 13:52:46,835] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 13:52:46,836] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2019-11-02 13:53:49,761] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2019-11-02 13:54:09,890] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-11-02 13:54:09,910] INFO [Controller id=0] 0 successfully elected as the controller (kafka.controller.KafkaController)
[2019-11-02 13:54:09,911] INFO [Controller id=0] Reading controller epoch from ZooKeeper (kafka.controller.KafkaController)
[2019-11-02 13:54:09,914] INFO [Controller id=0] Incrementing controller epoch in ZooKeeper (kafka.controller.KafkaController)
[2019-11-02 13:54:09,926] INFO [Controller id=0] Epoch incremented to 1 (kafka.controller.KafkaController)
[2019-11-02 13:54:09,926] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2019-11-02 13:54:09,933] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2019-11-02 13:54:09,938] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2019-11-02 13:54:09,944] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2019-11-02 13:54:09,994] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2019-11-02 13:54:10,009] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2019-11-02 13:54:10,027] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2019-11-02 13:54:10,030] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2019-11-02 13:54:10,032] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2019-11-02 13:54:10,034] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2019-11-02 13:54:10,035] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2019-11-02 13:54:10,036] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2019-11-02 13:54:10,043] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2019-11-02 13:54:10,044] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2019-11-02 13:54:10,045] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2019-11-02 13:54:10,046] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2019-11-02 13:54:10,054] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ReplicaStateMachine)
[2019-11-02 13:54:10,055] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ReplicaStateMachine)
[2019-11-02 13:54:10,065] INFO [RequestSendThread controllerId=0] Controller 0 connected to 10.0.0.63:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-11-02 13:54:10,073] INFO [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ReplicaStateMachine)
[2019-11-02 13:54:10,073] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.PartitionStateMachine)
[2019-11-02 13:54:10,076] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.PartitionStateMachine)
[2019-11-02 13:54:10,082] INFO [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.PartitionStateMachine)
[2019-11-02 13:54:10,083] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2019-11-02 13:54:10,090] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2019-11-02 13:54:10,091] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2019-11-02 13:54:10,091] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2019-11-02 13:54:10,092] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2019-11-02 13:54:10,093] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-11-02 13:54:10,106] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2019-11-02 13:54:15,113] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 13:54:15,117] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2019-11-02 13:54:24,255] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2019-11-02 13:54:24,255] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2019-11-02 13:54:24,256] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2019-11-02 13:54:24,259] TRACE [Controller id=0] All leaders =  (kafka.controller.KafkaController)
[2019-11-02 13:54:25,010] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-11-02 13:54:25,010] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-11-02 13:54:25,010] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-11-02 13:54:25,011] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2019-11-02 13:54:25,012] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2019-11-02 13:54:25,023] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2019-11-02 13:54:25,025] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2019-11-02 13:54:25,048] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2019-11-02 13:54:25,052] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2019-11-02 13:54:25,053] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2019-11-02 13:54:25,055] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2019-11-02 13:55:11,244] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2019-11-02 13:55:22,901] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-11-02 13:55:22,921] INFO [Controller id=0] 0 successfully elected as the controller (kafka.controller.KafkaController)
[2019-11-02 13:55:22,922] INFO [Controller id=0] Reading controller epoch from ZooKeeper (kafka.controller.KafkaController)
[2019-11-02 13:55:22,924] INFO [Controller id=0] Incrementing controller epoch in ZooKeeper (kafka.controller.KafkaController)
[2019-11-02 13:55:22,936] INFO [Controller id=0] Epoch incremented to 1 (kafka.controller.KafkaController)
[2019-11-02 13:55:22,936] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2019-11-02 13:55:22,943] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2019-11-02 13:55:22,949] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2019-11-02 13:55:22,954] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2019-11-02 13:55:23,045] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2019-11-02 13:55:23,060] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2019-11-02 13:55:23,075] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2019-11-02 13:55:23,077] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2019-11-02 13:55:23,078] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2019-11-02 13:55:23,079] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2019-11-02 13:55:23,079] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2019-11-02 13:55:23,080] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2019-11-02 13:55:23,089] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2019-11-02 13:55:23,089] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2019-11-02 13:55:23,090] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2019-11-02 13:55:23,091] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2019-11-02 13:55:23,105] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ReplicaStateMachine)
[2019-11-02 13:55:23,107] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ReplicaStateMachine)
[2019-11-02 13:55:23,113] INFO [RequestSendThread controllerId=0] Controller 0 connected to 10.0.0.63:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-11-02 13:55:23,116] INFO [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ReplicaStateMachine)
[2019-11-02 13:55:23,117] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.PartitionStateMachine)
[2019-11-02 13:55:23,117] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.PartitionStateMachine)
[2019-11-02 13:55:23,127] INFO [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.PartitionStateMachine)
[2019-11-02 13:55:23,128] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2019-11-02 13:55:23,133] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2019-11-02 13:55:23,133] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2019-11-02 13:55:23,134] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2019-11-02 13:55:23,135] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2019-11-02 13:55:23,135] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-11-02 13:55:23,143] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2019-11-02 13:55:28,149] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-11-02 13:55:28,153] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2019-11-02 13:57:04,841] INFO [Controller id=0] New topics: [Set(getNewOrderOwner)], deleted topics: [Set()], new partition replica assignment [Map(getNewOrderOwner-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-11-02 13:57:04,844] INFO [Controller id=0] New partition creation callback for getNewOrderOwner-0 (kafka.controller.KafkaController)
[2019-11-02 13:57:13,276] INFO [Controller id=0] New topics: [Set(getConfirmedOrderOwner)], deleted topics: [Set()], new partition replica assignment [Map(getConfirmedOrderOwner-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-11-02 13:57:13,276] INFO [Controller id=0] New partition creation callback for getConfirmedOrderOwner-0 (kafka.controller.KafkaController)
[2019-11-02 13:57:22,060] INFO [Controller id=0] New topics: [Set(getPreparingOrderOwner)], deleted topics: [Set()], new partition replica assignment [Map(getPreparingOrderOwner-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-11-02 13:57:22,060] INFO [Controller id=0] New partition creation callback for getPreparingOrderOwner-0 (kafka.controller.KafkaController)
[2019-11-02 13:57:31,273] INFO [Controller id=0] New topics: [Set(getReadyOrderOwner)], deleted topics: [Set()], new partition replica assignment [Map(getReadyOrderOwner-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-11-02 13:57:31,273] INFO [Controller id=0] New partition creation callback for getReadyOrderOwner-0 (kafka.controller.KafkaController)
[2019-11-02 13:57:42,201] INFO [Controller id=0] New topics: [Set(getCancelledOrderOwner)], deleted topics: [Set()], new partition replica assignment [Map(getCancelledOrderOwner-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-11-02 13:57:42,201] INFO [Controller id=0] New partition creation callback for getCancelledOrderOwner-0 (kafka.controller.KafkaController)
[2019-11-02 13:57:49,328] INFO [Controller id=0] New topics: [Set(getPastOrderUser)], deleted topics: [Set()], new partition replica assignment [Map(getPastOrderUser-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-11-02 13:57:49,328] INFO [Controller id=0] New partition creation callback for getPastOrderUser-0 (kafka.controller.KafkaController)
[2019-11-02 13:57:56,557] INFO [Controller id=0] New topics: [Set(getUpcomingOrderUser)], deleted topics: [Set()], new partition replica assignment [Map(getUpcomingOrderUser-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-11-02 13:57:56,558] INFO [Controller id=0] New partition creation callback for getUpcomingOrderUser-0 (kafka.controller.KafkaController)
[2019-11-02 13:58:02,865] INFO [Controller id=0] New topics: [Set(getPastOrderOwner)], deleted topics: [Set()], new partition replica assignment [Map(getPastOrderOwner-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-11-02 13:58:02,865] INFO [Controller id=0] New partition creation callback for getPastOrderOwner-0 (kafka.controller.KafkaController)
[2019-11-02 13:58:10,347] INFO [Controller id=0] New topics: [Set(postCancelOrder)], deleted topics: [Set()], new partition replica assignment [Map(postCancelOrder-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-11-02 13:58:10,347] INFO [Controller id=0] New partition creation callback for postCancelOrder-0 (kafka.controller.KafkaController)
[2019-11-02 13:58:17,951] INFO [Controller id=0] New topics: [Set(postChangeOrderStatus)], deleted topics: [Set()], new partition replica assignment [Map(postChangeOrderStatus-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-11-02 13:58:17,951] INFO [Controller id=0] New partition creation callback for postChangeOrderStatus-0 (kafka.controller.KafkaController)
[2019-11-02 13:58:24,654] INFO [Controller id=0] New topics: [Set(postPlaceOrder)], deleted topics: [Set()], new partition replica assignment [Map(postPlaceOrder-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-11-02 13:58:24,655] INFO [Controller id=0] New partition creation callback for postPlaceOrder-0 (kafka.controller.KafkaController)
[2019-11-02 13:58:35,667] INFO [Controller id=0] New topics: [Set(responseTopic)], deleted topics: [Set()], new partition replica assignment [Map(responseTopic-0 -> Vector(0))] (kafka.controller.KafkaController)
[2019-11-02 13:58:35,667] INFO [Controller id=0] New partition creation callback for responseTopic-0 (kafka.controller.KafkaController)
